# 2. Дан список строк. Выполнить обработку списка (смотри текст задания) и сформировать на его основе строку
# Техническое задание:
#
# Список может содержать произвольное кол-во элементов. Все его элементы - строки.
# Примеры исходного списка:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# Строки-элементы списка:
# Время: любое целое число, без привязки к ограничениям на 60 минут/секунд и 24 часа, т.е. '79', 'минут' - это корректно. Пример: "1" "12" "75"
# Температуры: любое целое число. Начинается со знаков + или -, но может и быть без знака. Пример: "+5", "-7", "12";
# Слова: просто символьные строки.
# в начале и конце строк-чисел пробелов нет.
# строки-числа и строки-слова не обязательно идут точно через один.
# Создать новый список и наполнить его элементами по схеме:
# Обособить каждое целое число (исходного списка) кавычками (добавить элемент списка: строку-кавычку до и после элемента списка, являющегося числом)
# дополнить это число нулём до двух целочисленных разрядов
# Например исходный список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов'].
# Тогда новый список: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов'].
# Новый список вывести на экран
# После окончательного формирования нового списка - сделать на его основе строку, соединив все элементы
# Для примера выше: 'в "05" часов "17" минут температура воздуха была "+05" градусов'
# Вывести строку на экран.
# Обратите внимание на отсутствие "лишних" пробелов около кавычек, например "08" минут - правильно, а " 08 " минут - неправильно.
# Ваш алгоритм должен работать для любого подобного списка, а не только для приведенных примеров.
# Регулярные выражения не используем. Учимся парсить строку самостоятельно.
# Подтвердить правильность программы на трех приведенных тестах
# Формат вывода результата:
# Исходный, результирующий список и строку выводим на экран через print.
#
# Примеры/Тесты:
#
# Исходный список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Новый список + добавление элементов-кавычек: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Окончательная строка: 'в "05" часов "17" минут температура воздуха была "+05" градусов'
# Исходный список: ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# Новый список + добавление элементов-кавычек: ['примерно в', '"', '23', '"', 'часа', '"', '08', '"', 'минут', '"', '03', '"', 'секунд', 'температура', 'воздуха', 'была', '"', '-05', '"', 'градусов Цельсия', 'темп', 'воды', '"', '+12', '"', 'градусов', 'Цельсия']
# Окончательная строка: 'примерно в "23" часа "08" минут "03" секунд температура воздуха была "-05" градусов Цельсия, темп воды "+12" градусов Цельсия'
# Исходный список: ['+9', 'примерно в', '23', 'часа', '8', 'минут', '03', '05', 'секунд', 'температура', 'воздуха', 'была', '5', 'градусов Цельсия', 'темп','воды','+2.0','градусов','Цельсия' ,'-2', '11']
# Новый список + добавление элементов-кавычек: ['"', '+09', '"', 'примерно в', '"', '23', '"', 'часа', '"', '08', '"', 'минут', '"', '03', '"', '"', '05', '"', 'секунд', 'температура', 'воздуха', 'была', '"', '05', '"', 'градусов Цельсия', 'темп', 'воды', '+2.0', 'градусов', 'Цельсия', '"', '-02', '"', '"', '11', '"']
# "+09" примерно в "23" часа "08" минут "03" "05" секунд температура воздуха была "05" градусов Цельсия темп воды +2.0 градусов Цельсия "-02" "11"
# Задание упрощенное
#
# Если у вас не получается добавить правильно элементы-кавычки в новый список - упростим задачу. Обработайте строки-числа исходного спискав соответствии с условием задачи и вставьте кавычки прямо в эту же строку. Т.е. вы меняете элементы списка, не добавляя новых элементов. При этом вы можете создавать новый список или не делать этого.
# Если вы выбрали решать упрощенный вариант - напишите об этом комментариях в ПЗ.
#
# Задание повышенной сложности (задание со звездочкой)
#
# Не создавайте новый список. Это называется решить «in place». Измените существующий список, добавив элементы-кавычки в соответствии с условием задачи. Не добавляйте «лишних» элементов - только элементы-кавычки и не удаляйте из списка никаких элементов. Эта задача намного серьезнее, чем может сначала показаться.
# Если вы выбрали решать усложненный вариант - напишите об этом комментариях в ПЗ.

list_a = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
list_b = ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
list_c=  ['+9', 'примерно в', '23', 'часа', '8', 'минут', '03', '05', 'секунд', 'температура', 'воздуха', 'была', '5', 'градусов Цельсия', 'темп','воды','+2.0','градусов','Цельсия' ,'-2', '11']


list_index_digit = []

def is_digit(string):           # is string is digit without sign
    result = True
    if string.isdigit():
        return len(string)      # string is digit without sign , return Num of digits
    else:
        return -1               # string isn't digit



def is_digit_with_sign(string):         # is string is digit with sign
    result = True
    if string[0] != '+' and string[0] != '-':
        return -1
    else:
        if string[1:].isdigit():
            return len(string[1:])
        else:
            return -1;


def format_digit_wo_sign(element):      # format 1-digit string without  sign
    string = f'0{element}'
    return string


def format_digit_sign(element):         # format 1-digit string with  sign
    string = f'{element[0]}0{element[1]}'
    return string


list_input = input (' please choose list number : 1, 2, 3 : ')

if list_input == '1':
    list1 = list_a
elif list_input == '2':
    list1 = list_b
else :
    list1 = list_c

print(' Initial  list : ')
print(list1)

for i, element in enumerate(list1):
    # print(f' Check Element {element}')
    a = is_digit(element)                           # is string is digit without sign
    if a != -1:
        # print ( f'Element {element}  число без знака , {a} символов ')
        list_index_digit.append(i)
    if a==1:
        list1[i] = format_digit_wo_sign(element)
        # print(f'changed to {new_element}')

    b = is_digit_with_sign(element)
    if b != -1:
        # print(f'Element {element}  число со знаком {b} символов ')
        list_index_digit.append(i)
    if b==1:
        list1[i] = format_digit_sign(element)
        # print(f'changed to {new_element}')

#  print(f'list of digits: {list_index_digit}')              # list of indexes of digits

#  here we will enter ' "" '  to list

shift =0
for k in list_index_digit:
    list1.insert((k+shift), '"')
    shift += 2
    list1.insert((k + shift), '"')

print(' New list : ')
print (list1)



print(' Result string : ')
print(result_string(list1))



